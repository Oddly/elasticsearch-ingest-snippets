# Enhanced GitHub Actions workflow to validate Elasticsearch ingest pipelines
name: Validate Ingest Pipelines

on:
  push:
    branches: [ "main", "pipeline_testing" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      pipeline_directory:
        description: 'The single pipeline directory to test (e.g., pipelines/x509_certs)'
        required: true
        type: string
        default: pipelines/x509_certs
      enable_visual_diff:
        description: 'Generate a visual diff in the log'
        required: true
        type: boolean
        default: true

jobs:
  validate:
    runs-on: ubuntu-latest
    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:9.1.0
        ports:
          - 9200:9200
        env:
          discovery.type: single-node
          xpack.security.enabled: "false"
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history to allow for correct diffing against base branch
          fetch-depth: 0

      - name: Find changed pipeline files
        id: changed-files
        if: github.event_name != 'workflow_dispatch'
        uses: tj-actions/changed-files@v44
        with:
          files: pipelines/**
          dir_names: 'true'
          # We want the output as a space-separated string for the env var
          separator: " "

      # This new step determines the final list of directories to test
      - name: Set test scope
        id: test-scope
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Test scope is from manual input: ${{ inputs.pipeline_directory }}"
            echo "pipelines_to_test=${{ inputs.pipeline_directory }}" >> $GITHUB_OUTPUT
          else
            echo "Test scope is from changed files: ${{ steps.changed-files.outputs.all_changed_files }}"
            echo "pipelines_to_test=${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install -r scripts/requirements.txt

      - name: Wait for Elasticsearch and run validation
        env:
          # Use the output from our new "Set test scope" step
          PIPELINES_TO_TEST: "${{ steps.test-scope.outputs.pipelines_to_test }}"
          DEBUG_ENABLED: "${{ inputs.enable_visual_diff }}"
          GITHUB_EVENT_NAME: "${{ github.event_name }}"
        run: python3 scripts/validate_pipelines.py
